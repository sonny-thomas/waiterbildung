name: poc-scraper

services:
  api:
    build: .
    ports:
      - 8000:8000
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build: .
    command: celery -A app.celery worker --loglevel=info
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    healthcheck:
      test: celery -A app.celery inspect ping
      interval: 10s
      timeout: 5s
      retries: 5

  celery_flower:
    build: .
    command: celery -A app.celery flower
    ports:
      - 5555:5555
    env_file:
      - .env
    depends_on:
      celery_worker:
        condition: service_healthy

  mongodb:
    image: mongo:latest
    ports:
      - "${MONGO_PORT:-27017}:27017"
    env_file:
      - .env
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_interval: 5s

  redis:
    image: redis:alpine
    env_file:
      - .env
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli -u ${REDIS_URL} ping
      interval: 30s
      timeout: 10s
      retries: 3
      start_interval: 5s

volumes:
  mongodb_data:
  mongodb_config:
  redis_data: